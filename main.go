package main

import (
	tele "gopkg.in/telebot.v4"
	"log"
	"math/rand"
	"time"
)

const (
	startMessage = `
	–Ø —Å–æ–∑–¥–∞–Ω —á—Ç–æ –±—ã –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å —Ç–µ–±–µ –º–∞–∑–∞—Ç—å —Ä—É—á–∫–∏ –∫—Ä–µ–º–æ–º! –ë—É–¥—É –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 23:59.
–¢–æ–ª—å–∫–æ –ø–æ–ø—Ä–æ–±—É–π –º–µ–Ω—è –æ—Å–ª—É—à–∞—Ç—å—Å—è, —Ç–µ–±–µ –ø–∏–∑–¥–∞!‚ù§Ô∏è
`
	msg1 = `
	–ê—Ö—É–µ–ª–∞ —Å–µ–π—á–∞—Å??? –ê –Ω—É –±–µ–≥–æ–º –º–∞–∑–∞—Ç—å —Ä—É—á–∫–∏, –≥–∞–¥–∏–Ω–∞!
`
	msg2 = `
	C–æ–≤—Å–µ–º —Å—Ç—Ä–∞—Ö –ø–æ—Ç–µ—Ä—è–ª–∞, –Ω–∞–º–∞–∑–∞–ª–∞ —Ä—É—á–∫–∏ –±—ã—Å—Ç—Ä–æ!
`
	msg3 = `
	–ù–µ —Ç–æ –Ω–∞–∂–∞–ª–∞, –¥—É—Ä—ã–Ω–¥–∞, —Ö–æ—Ä–æ—à–æ –ø–æ–¥—É–º–∞–π, –Ω–∞–º–∞–∂ —Ä—É–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤—å	—ç—Ç–æ –Ω–µ–¥–æ—Ä–∞–∑—É–º–µ–Ω–∏–µ
`
	msg4 = `
	–ü–∞—Ç–æ—Ä–æ—á, –æ—Ç–≤–µ—Ç –Ω–µ –ø—Ä–∏–Ω—è—Ç, –±–µ–≥–æ–º —Ä—É–∫–∏ –º–∞–∑–∞—Ç—å!
`
	msg5 = `
	C–º–µ–ª–∞—è —è –ø–æ—Å–º–æ—Ç—Ä—é, –ø–∏–∑–¥—É–π –∑–∞ –∫—Ä–µ–º–æ–º!
`
	msg6 = `–¢–∞ –º–Ω–µ –ø–æ—Ö—É–π, —á—Ç–æ —Ç—ã —Ç–∞–º –Ω–∞–∂–∞–ª–∞, –¥–∞–≤–∞–π –ø–æ –Ω–æ–≤–æ–π, –≤—Å–µ —Ö—É–π–Ω—è!`
)

func main() {
	pref := tele.Settings{
		Token:  "7661864692:AAETirYrxakprt86ITrRcTQQruoV3ssdnYI",
		Poller: &tele.LongPoller{Timeout: 10 * time.Second},
	}

	b, err := tele.NewBot(pref)
	if err != nil {
		log.Fatal(err)
		return
	}

	loc := time.FixedZone("UTC+4", 4*60*60) // 4 —á–∞—Å–∞ * 60 –º–∏–Ω—É—Ç * 60 —Å–µ–∫—É–Ω–¥

	s := [4]string{"‚ù§Ô∏è", "üíú", "üíô", "üíö"}
	ph := [6]string{msg1, msg2, msg3, msg4, msg5, msg6}
	m := &tele.ReplyMarkup{}
	y := m.Data("–î–∞", "1")
	n := m.Data("–ù–µ—Ç (–¥–∞–∂–µ –Ω–µ –¥—É–º–∞–π)", "2")
	m.Inline(m.Row(y), m.Row(n))

	b.Handle("/start", func(c tele.Context) error {
		c.Send(startMessage)
		w := while(loc)
		time.Sleep(time.Duration(w))
		return c.Send("–≠–π, –≤—Ä–µ–º—è –º–∞–∑–∞—Ç—å —Ä—É—á–∫–∏! –ù–∞–º–∞–∑–∞–ª–∞?", m)
	})
	b.Handle(&y, func(c tele.Context) error {
		c.Send("–¢–≤–æ–∏ —Ä—É—á–∫–∏ —Å–∫–∞–∂—É—Ç —Ç–µ–±–µ —Å–ø–∞—Å–∏–±–æ, —è –ª—é–±–ª—é —Ç–µ–±—è")
		c.Send(s[rand.Intn(len(s)-1)])
		w := while(loc)
		time.Sleep(time.Duration(w))
		return c.Send("–≠–π, –≤—Ä–µ–º—è –º–∞–∑–∞—Ç—å —Ä—É—á–∫–∏! –ù–∞–º–∞–∑–∞–ª–∞?", m)
	})

	b.Handle(&n, func(c tele.Context) error {
		return c.Send(ph[rand.Intn(len(ph)-1)], m)
	})
	b.Start()
}

func while(loc *time.Location) int64 {
	now := time.Now().In(loc)
	targetTime := time.Date(now.Year(), now.Month(), now.Day(), 23, 59, 59, 59, loc)
	diff := targetTime.Sub(now).Nanoseconds()
	return diff

}
